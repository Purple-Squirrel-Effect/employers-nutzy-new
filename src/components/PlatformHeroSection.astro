---
import IPhoneMockup from "./IPhoneMockup.astro";
import ScatteredCards, { type Card } from "./ScatteredCards.astro";
import Section from "./Section.astro";

export interface Props {
  cards?: Card[];
  className?: string;
}

const {
  cards = [
    {
      id: "card-1",
      wireframe: "/img/wireframes/job-board-wireframe.svg",
      alt: "Job Board Platform",
      title: "JobFind",
      websiteType: "job-board",
      backgroundColor: "bg-primary-500",
    },
    {
      id: "card-2",
      wireframe: "/img/wireframes/linkedin-wireframe.svg",
      alt: "Professional Network",
      title: "CareerNet",
      subtitle: "Professional Platform",
      websiteType: "professional-network",
      backgroundColor: "bg-white",
    },
    {
      id: "card-3",
      wireframe: "/img/wireframes/job-detail-wireframe.svg",
      alt: "Job Detail Page",
      title: "Position View",
      websiteType: "job-detail",
      backgroundColor: "bg-primary-900",
    },
    {
      id: "card-4",
      wireframe: "/img/wireframes/recruitment-dashboard-wireframe.svg",
      alt: "Recruitment Dashboard",
      title: "Talent Hub",
      websiteType: "recruitment-dashboard",
      backgroundColor: "bg-white",
    },
    {
      id: "card-5",
      wireframe: "/img/wireframes/job-board-wireframe.svg",
      alt: "Alternative Job Board",
      title: "TechJobs",
      websiteType: "job-board",
      backgroundColor: "bg-primary-900",
    },
    {
      id: "card-6",
      wireframe: "/img/wireframes/linkedin-wireframe.svg",
      alt: "Professional Platform",
      title: "NetworkPro",
      websiteType: "professional-network",
      backgroundColor: "bg-white",
    },
  ],
  className = "",
} = Astro.props;
---

<Section>
  <div id="smooth-wrapper" class="h-screen pt-32" id="smooth-wrapper">
    <div class="relative" id="smooth-content">
      <div class="grid p-8 grid-cols-2 h-[100svh]">
        <div id="container-a" class="w-full h-full">
          <h1
            class="text-4xl md:text-5xl lg:text-8xl font-bold text-black mb-6 drop-shadow-2xl absolute inset-0"
            id="main-title"
          >
            Moeite met <br />
            <span class="text-purple-900">Gen Z</span>
            bereiken?
          </h1>
        </div>
        <div id="container-b" class="w-full h-full">
          <ScatteredCards {cards} />
        </div>
      </div>
    </div>
    <div class="grid p-8 grid-cols-2 h-[100svh] absolute top-32">
      <div id="container-c" class="w-full h-full opacity-0 translate-x-full">
        <IPhoneMockup />
      </div>
      <div id="container-d" class="w-full h-full opacity-0 -translate-x-full">
        <h1
          class="text-4xl md:text-5xl lg:text-8xl font-bold shadow-white text-shadow text-black mb-6 drop-shadow-2xl i"
          id="second-title"
        >
          Op <span class="text-purple-900">NUTZY</span>
          valt je vacature op
        </h1>
      </div>
    </div>
  </div>
</Section>

<script>
  import { gsap } from "gsap";
  import { Flip } from "gsap/Flip";
  import { ScrollSmoother } from "gsap/ScrollSmoother";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Register GSAP plugins
  gsap.registerPlugin(Flip, ScrollTrigger, ScrollSmoother);

  const containerA = document.getElementById("container-a");
  const containerB = document.getElementById("container-b");
  const containerC = document.getElementById("container-c");
  const containerD = document.getElementById("container-d");
  const smoothWrapper = document.getElementById("smooth-wrapper");

  const timeline = gsap.timeline({ paused: true });

  timeline.fromTo(
    containerA,

    {
      x: "0%",
      duration: 1,
      opacity: 1,
      ease: "power2.inOut",
    },
    {
      x: "100%",
      duration: 1,
      opacity: 0,
      ease: "power2.inOut",
    },
    1
  );

  timeline.fromTo(
    containerB,
    {
      x: "0%",
      y: "25%",
      rotate: "-15",
      duration: 1,
      opacity: 1,
      ease: "power2.inOut",
    },
    {
      x: "-100%",
      y: "25%",
      rotate: "-15",
      duration: 1,
      opacity: 0,
      ease: "power2.inOut",
    },
    1
  );

  timeline.fromTo(
    containerC,
    {
      x: "100%",
      scale: 1,
      rotate: "0",
      duration: 1,
      opacity: 0,
      ease: "power2.inOut",
    },
    {
      x: "50-svw",
      y: "0svh",
      scale: 1,
      rotate: "-18",
      duration: 1,
      opacity: 1,
      ease: "power2.inOut",
    },
    1
  );

  timeline.fromTo(
    containerD,
    {
      x: "-100%",
      duration: 1,
      opacity: 0,
      ease: "power2.inOut",
    },
    {
      x: "0",
      duration: 1,
      opacity: 1,
      ease: "power2.inOut",
    },
    1
  );

  ScrollTrigger.create({
    trigger: smoothWrapper,
    start: "top 5%",
    end: "bottom 50%+=100px",
    pinType: "fixed",
    pin: true,
    pinSpacing: true,
    scrub: 1,
    animation: timeline,
  });
</script>
