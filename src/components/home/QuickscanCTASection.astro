---
// QuickscanCTASection.astro
// Call-to-action section for the Nutzy Quickscan feature
// Follows the established design system with primary brand colors and responsive layout

import CardDescription from "../CardDescription.astro";
import CardTitle from "../CardTitle.astro";
import Section from "../Section.astro";
import SectionTitle from "../SectionTitle.astro";

export interface Props {
  id?: string;
  className?: string;
}

const { id = "quickscan-cta", className = "" } = Astro.props;
---

<Section
  id={id}
  sectionClassName="bg-primary-500 overflow-hidden"
  className={`relative py-16 md:py-24 lg:py-32 ${className}`}
>
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-10">
    <img
      src="/svg/Analysis-amico.svg"
      alt="Quickscan background illustration"
      class="w-full h-full object-cover"
      loading="lazy"
    />
  </div>

  <!-- Main Content Container -->
  <div
    class="relative z-10 flex flex-col lg:flex-row gap-8 lg:gap-12 items-center"
  >
    <!-- Left Column - Content -->

    <SectionTitle
      class="text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight"
    >
      Is jouw bedrijf al klaar voor het werven van
      <span class="text-secondary-200">Gen Z?</span>
    </SectionTitle>

    <!-- Right Column - Form -->
    <div class="relative z-10" data-quickscan-form>
      <div
        class="bg-white/95 backdrop-blur-sm rounded-2xl p-6 lg:p-8 shadow-2xl border border-white/20"
      >
        <form class="space-y-4" id="quickscan-form" novalidate>
          <!-- Form Header -->
          <div class="text-center mb-6">
            <CardTitle> Start je gratis quickscan </CardTitle>
            <CardDescription>
              Doe de Nutzy Quickscan en krijg kosteloos een analyse op maat,
              gebaseerd op PwC-onderzoek naar de pullfactoren die Gen Z Ã©cht
              aantrekken.
            </CardDescription>
          </div>

          <!-- Vacature URL Field -->
          <div class="form-group">
            <label
              for="vacature-url"
              class="block text-sm font-semibold text-gray-900 mb-2"
            >
              Vacature URL <span class="text-secondary-500">*</span>
            </label>
            <input
              type="url"
              id="vacature-url"
              name="vacature-url"
              placeholder="https://www.bedrijf.nl/vacatures/functie"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200"
            />
            <div
              class="error-message hidden text-sm text-red-600 mt-1"
              data-error="vacature-url"
            >
            </div>
          </div>

          <!-- Email Field -->
          <div class="form-group">
            <label
              for="email"
              class="block text-sm font-semibold text-gray-900 mb-2"
            >
              Je email <span class="text-secondary-500">*</span>
            </label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="jij@bedrijf.nl"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200"
            />
            <div
              class="error-message hidden text-sm text-red-600 mt-1"
              data-error="email"
            >
            </div>
          </div>

          <!-- Phone Field (Optional) -->
          <div class="form-group">
            <label
              for="phone"
              class="block text-sm font-semibold text-gray-900 mb-2"
            >
              Je telefoonnummer <span class="text-gray-500">(optioneel)</span>
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              placeholder="+31 6 12345678"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200"
            />
          </div>

          <!-- Submit Button -->
          <button
            type="submit"
            class="w-full hover:cursor-pointer bg-tertiary-500 text-black hover:brightness-110 font-bold py-4 px-6 rounded-xl transition-all duration-300 focus:ring-4 focus:ring-primary-200 focus:outline-none"
            data-submit-btn
          >
            <span class="submit-text">Verstuur</span>
            <span class="loading-text hidden">Versturen...</span>
          </button>

          <!-- Privacy Notice -->
          <p class="text-xs text-gray-500 text-center mt-4">
            Door je gegevens in te vullen ga je akkoord met onze
            <a href="/privacy" class="text-primary-500 hover:underline"
              >privacyverklaring</a
            >
          </p>
        </form>

        <!-- Success Message -->
        <div
          class="success-message hidden bg-green-50 border border-green-200 rounded-lg p-4 mt-4"
          data-success
        >
          <div class="flex items-center gap-3">
            <div
              class="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0"
            >
              <svg
                class="w-4 h-4 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <div>
              <h4 class="font-semibold text-green-800">Bedankt!</h4>
              <p class="text-sm text-green-700">
                Je quickscan is verstuurd. We nemen binnen 24 uur contact met je
                op.
              </p>
            </div>
          </div>
        </div>

        <!-- Error Message -->
        <div
          class="error-message hidden bg-red-50 border border-red-200 rounded-lg p-4 mt-4"
          data-error-general
        >
          <div class="flex items-center gap-3">
            <div
              class="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0"
            >
              <svg
                class="w-4 h-4 text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <div>
              <h4 class="font-semibold text-red-800">Er ging iets mis</h4>
              <p class="text-sm text-red-700">
                Probeer het opnieuw of neem contact met ons op.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Section>

<style>
  /* Wireframe Scanning Animations - Single 8s cycle with 5s wait */
  @keyframes scanningCycle {
    /* Initial state */
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    /* Scan starts - fade in */
    6.25% {
      /* 0.5s */
      transform: translateX(-100%);
      opacity: 1;
    }
    /* Scan across */
    43.75% {
      /* 3.5s */
      transform: translateX(100vw);
      opacity: 1;
    }
    /* Scan complete - fade out */
    50% {
      /* 4s */
      transform: translateX(100vw);
      opacity: 0;
    }
    /* Wait period */
    100% {
      /* 8s */
      transform: translateX(-100%);
      opacity: 0;
    }
  }

  @keyframes progressCycle {
    /* Initial state */
    0% {
      width: 0%;
      opacity: 1;
    }
    /* Progress starts */
    10% {
      /* 0.8s */
      width: 0%;
      opacity: 1;
    }
    /* Progress fills */
    43.75% {
      /* 3.5s */
      width: 100%;
      opacity: 1;
    }
    /* Hide when overlay appears */
    50% {
      /* 4s */
      width: 100%;
      opacity: 0;
    }
    /* Stay hidden during wait */
    87.5% {
      /* 7s */
      width: 100%;
      opacity: 0;
    }
    /* Reset for next cycle */
    100% {
      /* 8s */
      width: 0%;
      opacity: 1;
    }
  }

  @keyframes overlayResultsCycle {
    /* Hidden initially */
    0% {
      opacity: 0;
      visibility: hidden;
      transform: scale(0.9);
    }
    /* Results appear */
    41.25% {
      /* 3.3s */
      opacity: 0;
      visibility: hidden;
      transform: scale(0.9);
    }
    43.75% {
      /* 3.5s */
      opacity: 1;
      visibility: visible;
      transform: scale(1);
    }
    /* Stay visible during wait */
    87.5% {
      /* 7s */
      opacity: 1;
      visibility: visible;
      transform: scale(1);
    }
    /* Hide for next cycle */
    100% {
      /* 8s */
      opacity: 0;
      visibility: hidden;
      transform: scale(0.9);
    }
  }

  @keyframes statusCycle {
    /* Purple (analyzing) */
    0% {
      background-color: #412683;
    }
    /* Stay purple during scan */
    43.75% {
      /* 3.5s */
      background-color: #412683;
    }
    /* Turn green (complete) */
    50% {
      /* 4s */
      background-color: #10b981;
    }
    /* Stay green during wait */
    87.5% {
      /* 7s */
      background-color: #10b981;
    }
    /* Reset to purple */
    100% {
      /* 8s */
      background-color: #412683;
    }
  }

  @keyframes statusContainerCycle {
    /* Visible initially */
    0% {
      opacity: 1;
    }
    /* Stay visible during scan */
    43.75% {
      /* 3.5s */
      opacity: 1;
    }
    /* Hide when overlay appears */
    50% {
      /* 4s */
      opacity: 0;
    }
    /* Stay hidden during wait */
    87.5% {
      /* 7s */
      opacity: 0;
    }
    /* Show for next cycle */
    100% {
      /* 8s */
      opacity: 1;
    }
  }

  /* Animation Classes */
  .scanning-bar {
    animation: scanningCycle 8s ease-in-out infinite;
  }

  .scanning-overlay {
    animation: scanningCycle 8s ease-in-out infinite;
  }

  .progress-bar {
    animation: progressCycle 8s ease-in-out infinite;
  }

  .analysis-results-overlay {
    animation: overlayResultsCycle 8s ease-in-out infinite;
  }

  .analysis-status-container {
    animation: statusContainerCycle 8s ease-in-out infinite;
  }

  /* Status indicator animation */
  [data-status-indicator] {
    animation: statusCycle 8s ease-in-out infinite;
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .scanning-bar,
    .scanning-overlay,
    .progress-bar,
    .analysis-results-overlay,
    .analysis-status-container,
    [data-status-indicator] {
      animation: none !important;
    }

    .scanning-bar,
    .scanning-overlay {
      opacity: 0;
    }

    .progress-bar {
      width: 100%;
      opacity: 0;
    }

    .analysis-results-overlay {
      opacity: 1;
      visibility: visible;
    }

    .analysis-status-container {
      opacity: 0;
    }
  }
</style>

<script>
  // Handle status text changes to sync with CSS animations
  document.addEventListener("DOMContentLoaded", () => {
    const statusText = document.querySelector(
      "[data-status-text]"
    ) as HTMLElement;
    const statusIndicator = document.querySelector(
      "[data-status-indicator]"
    ) as HTMLElement;

    if (statusText && statusIndicator) {
      // Function to update status text
      function updateStatus() {
        // Set to "Analyseren..." at start
        statusText.textContent = "Analyseren...";
        statusIndicator.classList.add("animate-pulse");

        // Change to "Analyse voltooid!" after 3.5 seconds
        setTimeout(() => {
          statusText.textContent = "Analyse voltooid!";
          statusIndicator.classList.remove("animate-pulse");
        }, 3500);
      }

      // Start immediately
      updateStatus();

      // Repeat every 8 seconds to match CSS animation cycle
      setInterval(updateStatus, 8000);
    }

    // Initialize form handling (keeping existing form functionality)
    const form = document.getElementById("quickscan-form") as HTMLFormElement;
    if (form) {
      // Add your existing form handling code here if needed
      console.log("Form initialized");
    }
  });
</script>
