---
import { getCollection } from "astro:content";
import { calculateReadingTime, formatDate } from "../../utils/blog";
import Section from "../Section.astro";

// Get blog posts using Astro loader API
const allBlogPosts = await getCollection("blog");

// Sort posts by date (newest first) and get the latest 3
const latestBlogPosts = allBlogPosts
  .filter((post) => !post.data.draft) // Filter out draft posts
  .sort((a, b) => new Date(b.data.posted).getTime() - new Date(a.data.posted).getTime())
  .slice(0, 3); // Get exactly 3 most recent posts

// Transform blog posts to match the expected interface for the template
interface DisplayBlogPost {
  id: string;
  title: string;
  excerpt: string;
  date: string;
  readTime: string;
  category: string;
  slug: string;
  featured_image: string;
  formattedDate: string;
}

const blogPosts: DisplayBlogPost[] = latestBlogPosts.map((post) => ({
  id: post.id,
  featured_image: post.data.featured_image ? `https://employers-backend.nutzy.nl/api/files/posts/${post.id}/${post.data.featured_image}` : "/svg/Content-creator-amico.svg", // Provide fallback for undefined featured_image
  title: post.data.title,
  excerpt: post.data.description || "Lees meer over dit onderwerp...", // Use description as excerpt
  date: post.data.posted.toISOString().split('T')[0], // Format as YYYY-MM-DD for datetime attribute
  readTime: `${post.data.readingTime || calculateReadingTime(post.data.content)} min`,
  category: post.data.category,
  slug: `/blog/${post.id}`, // Generate slug from post ID
  formattedDate: formatDate(post.data.posted), // Pre-format date for display
}));
---

<Section
  sectionClassName="bg-primary-500"
  className="grid grid-cols-1 mx-auto relative py-16 md:py-24 lg:py-32 "
>


  <!-- Content Container -->
  <div class="relative z-10 w-full mx-auto">
    <!-- Section Header -->
    <div class="text-center flex flex-col items-center   gap-4 mb-12 lg:mb-16" data-blog-header>
      <h1
      class="text-4xl md:text-6xl lg:text-7xl xl:text-8xl font-bold text-white relative z-50 text-shadow shadow-black"      >
        Kennis & <span class="text-primary-200">Inzichten</span>
      </h1>
      <p
       class="text-md lg:text-xl mx-auto pt-4 text-white max-w-2xl  "
      >
        Blijf op de hoogte van de nieuwste trends in Gen Z recruitment, visuele
        content strategieën en employer branding. Onze experts delen praktische
        inzichten die je direct kunt toepassen.
      </p>
    </div>




    <!-- Blog Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8" data-blog-grid>
      {blogPosts.map((post, index) => {
        return (
        <a
          href={post.slug}
          class="block group focus:outline-none focus:ring-offset-2 focus:ring-offset-secondary-500 rounded-2xl transition-all duration-300"
          data-blog-card
          data-index={index}
        >
          <article class="bg-white   rounded-2xl shadow-lg hover:shadow-2xl hover:border-primary-200 transition-all duration-300 hover:scale-[1.02] overflow-hidden h-full flex flex-col">
            <!-- Post Image -->
            <div class="relative h-48 overflow-hidden">
              <img
                src={post.featured_image}
                alt={post.title}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent"></div>
              {post.category && (
                <div class="absolute top-4 left-4">
                  <span class="inline-block px-3 py-1 bg-primary-500 text-white text-xs font-semibold rounded-full border border-primary-400">
                    {post.category}
                  </span>
                </div>
              )}
            </div>

            <!-- Post Content -->
            <div class="p-6 pb-4 flex-1">
              <!-- Category Badge -->
              {post.category && (
                <div class="mb-4">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-100 text-primary-800 border border-primary-200">
                    {post.category}
                  </span>
                </div>
              )}

              <!-- Title -->
              <h3 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2 group-hover:text-primary-700 transition-colors leading-tight">
                {post.title}
              </h3>

              <!-- Excerpt -->
              <div class="text-gray-600 mb-4 line-clamp-3 leading-relaxed">
                {post.excerpt}
              </div>
            </div>

            <!-- Post Footer -->
            <div class="px-6 pb-6 mt-auto">
              <div class="flex items-center justify-between text-sm text-gray-500">
                <!-- Author -->
                <div class="flex items-center gap-3">
                  <div class="h-10 w-10 bg-gradient-to-br from-primary-500 to-primary-600 rounded-full flex items-center justify-center shadow-md">
                    <span class="text-white font-bold text-sm">
                      NT
                    </span>
                  </div>
                  <div class="flex flex-col">
                    <span class="font-medium text-gray-700">Nutzy Team</span>
                    <span class="text-xs text-gray-500">{post.formattedDate}</span>
                  </div>
                </div>

                <!-- Reading Time -->
                <div class="flex items-center gap-2 text-xs text-gray-500 bg-gray-50 px-3 py-1 rounded-full">
                  <svg class="h-3 w-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>{post.readTime}</span>
                </div>
              </div>
            </div>
          </article>
        </a>
        );
      })}
    </div>

    <!-- Call to Action -->
    <div class="text-center mt-12 lg:mt-16" data-blog-cta>
      <div class="bg-gradient-to-br from-secondary-900 via-primary-900 to-secondary-900 rounded-3xl p-8 lg:p-12 relative overflow-hidden shadow-2xl">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
          <img
            src="/svg/Content-creator-amico.svg"
            alt="Newsletter background illustration"
            class="w-full h-full object-cover"
            loading="lazy"
          />
        </div>

        <!-- Content -->
        <div class="relative z-10">
          <h3 class="text-2xl md:text-3xl lg:text-4xl font-bold text-white mb-4 text-shadow shadow-black">
            Nieuwsbrief
          </h3>
          <p class="text-white/90 mb-8 max-w-2xl mx-auto text-lg leading-relaxed">
Blijf op de hoogte van trends in Gen Z-recruitment en ontdek hoe je jong talent aantrekt én behoudt.          </p>

          <!-- Newsletter Form -->
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 lg:p-8 border border-white/20 max-w-lg mx-auto">
            <form class="flex flex-col sm:flex-row gap-4 justify-center items-center" id="newsletter-form" novalidate>
              <input
                type="email"
                name="email"
                id="newsletter-email"
                placeholder="Jouw e-mailadres"
                required
                class="flex-1 px-4 py-3 rounded-lg bg-white/90 backdrop-blur-sm text-gray-900 placeholder-gray-600 focus:outline-none focus:ring-2 focus:ring-primary-200 focus:ring-offset-2 focus:ring-offset-transparent border border-white/30"
              />
              <button
                type="submit"
                id="newsletter-submit"
                class="px-8 py-3 hover:cursor-pointer bg-tertiary-500 text-black font-semibold rounded-lg transition-all duration-300 whitespace-nowrap shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed"
              >
                <span class="submit-text">Aanmelden</span>
                <span class="loading-text hidden">
                  <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-black inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Aanmelden...
                </span>
              </button>
            </form>

            <!-- Success Message -->
            <div
              id="newsletter-success"
              class="hidden mt-4 p-4 bg-green-500/20 border border-green-400/30 rounded-lg"
              role="alert"
              aria-live="polite"
            >
              <div class="flex items-center space-x-2">
                <svg
                  class="w-5 h-5 text-green-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                  ></path>
                </svg>
                <p class="text-green-300 text-sm font-medium" id="newsletter-success-text">
                  Bedankt voor je aanmelding! Je ontvangt binnenkort onze nieuwsbrief.
                </p>
              </div>
            </div>

            <!-- Error Message -->
            <div
              id="newsletter-error"
              class="hidden mt-4 p-4 bg-red-500/20 border border-red-400/30 rounded-lg"
              role="alert"
              aria-live="polite"
            >
              <div class="flex items-center space-x-2">
                <svg
                  class="w-5 h-5 text-red-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  ></path>
                </svg>
                <p class="text-red-300 text-sm font-medium" id="newsletter-error-text">
                  Er is een fout opgetreden bij het aanmelden. Probeer het opnieuw.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('newsletter-form') as HTMLFormElement;
    const submitBtn = document.getElementById('newsletter-submit') as HTMLButtonElement;
    const emailInput = document.getElementById('newsletter-email') as HTMLInputElement;
    const successMessage = document.getElementById('newsletter-success') as HTMLElement;
    const errorMessage = document.getElementById('newsletter-error') as HTMLElement;
    const successText = document.getElementById('newsletter-success-text') as HTMLElement;
    const errorText = document.getElementById('newsletter-error-text') as HTMLElement;

    if (!form || !submitBtn || !emailInput) return;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Hide previous messages
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');

      // Basic email validation
      const email = emailInput.value.trim();
      if (!email || !isValidEmail(email)) {
        showError('Voer een geldig e-mailadres in.');
        return;
      }

      // Show loading state
      submitBtn.disabled = true;
      const submitText = submitBtn.querySelector('.submit-text') as HTMLElement;
      const loadingText = submitBtn.querySelector('.loading-text') as HTMLElement;

      if (submitText) submitText.classList.add('hidden');
      if (loadingText) loadingText.classList.remove('hidden');

      try {
        // Get form data
        const formData = new FormData(form);

        // Submit to Astro action endpoint
        const response = await fetch('/_actions/subscribeNewsletter', {
          method: 'POST',
          body: formData,
        });

        const result = await response.json();

        if (result.success || response.ok) {
          // Show success message
          if (successText && result.message) {
            successText.textContent = result.message;
          }
          successMessage.classList.remove('hidden');
          form.reset();
        } else {
          throw new Error(result.error || 'Er is een fout opgetreden');
        }
      } catch (error) {
        // Show error message
        const errorMsg = error instanceof Error ? error.message : 'Er is een fout opgetreden bij het aanmelden. Probeer het opnieuw.';
        showError(errorMsg);
        console.error('Newsletter subscription error:', error);
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        if (submitText) submitText.classList.remove('hidden');
        if (loadingText) loadingText.classList.add('hidden');
      }
    });

    function showError(message: string) {
      if (errorText) {
        errorText.textContent = message;
      }
      errorMessage.classList.remove('hidden');
    }

    function isValidEmail(email: string): boolean {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    // Real-time email validation
    emailInput.addEventListener('input', () => {
      // Clear error state when user starts typing
      errorMessage.classList.add('hidden');
      emailInput.classList.remove('border-red-400');
    });

    emailInput.addEventListener('blur', () => {
      const email = emailInput.value.trim();
      if (email && !isValidEmail(email)) {
        showError('Voer een geldig e-mailadres in.');
        emailInput.classList.add('border-red-400');
      }
    });
  });
</script>

<style>
  /* Line clamp utility for text truncation */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Enhanced focus states for accessibility */
  .blog-card:focus-within {
    outline: 2px solid #412683;
    outline-offset: 2px;
  }

  /* Smooth transitions for all interactive elements */
  .blog-card a:focus {
    outline: 2px solid #412683;
    outline-offset: 2px;
    border-radius: 4px;
  }

  /* Newsletter form focus states */
  #newsletter-form input:focus {
    outline: 2px solid #412683;
    outline-offset: 2px;
  }

  #newsletter-form button:focus {
    outline: 2px solid #412683;
    outline-offset: 2px;
  }
</style>


