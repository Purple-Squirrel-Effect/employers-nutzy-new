---
export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<div class={`contact-form-container ${className}`} data-contact-form>
  <div class="max-w-4xl mx-auto">
    <div class="text-center mb-12">
      <h2 class="text-6xl font-bold text-purple-900 mb-6 split-contact">
        Laten we <br /> praten!
      </h2>
      <p class="text-xl text-purple-700 max-w-2xl mx-auto">
        Klaar om Gen-Z talent te bereiken? Neem contact met ons op en ontdek hoe
        wij jouw recruitment kunnen transformeren.
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
      <!-- Contact Information -->
      <div class="contact-info" data-contact-info>
        <div class="bg-white rounded-2xl p-8 shadow-lg">
          <h3 class="text-2xl font-bold text-purple-900 mb-6">
            Waarom kiezen voor ons?
          </h3>

          <div class="space-y-6">
            <div class="flex items-start gap-4">
              <div
                class="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center flex-shrink-0"
              >
                <svg
                  class="w-6 h-6 text-white"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-semibold text-gray-800 mb-2">
                  Snelle Resultaten
                </h4>
                <p class="text-gray-600">
                  Zie binnen 30 dagen een toename in kwaliteit kandidaten
                </p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div
                class="w-12 h-12 bg-gradient-to-br from-pink-500 to-purple-500 rounded-full flex items-center justify-center flex-shrink-0"
              >
                <svg
                  class="w-6 h-6 text-white"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-semibold text-gray-800 mb-2">
                  Bewezen Methode
                </h4>
                <p class="text-gray-600">
                  3x hogere conversie dan traditionele recruitment
                </p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div
                class="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center flex-shrink-0"
              >
                <svg
                  class="w-6 h-6 text-white"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
                  ></path>
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-semibold text-gray-800 mb-2">
                  Persoonlijke Aanpak
                </h4>
                <p class="text-gray-600">
                  Maatwerk strategie voor jouw specifieke behoeften
                </p>
              </div>
            </div>
          </div>

          <div class="mt-8 pt-6 border-t border-gray-200">
            <h4 class="text-lg font-semibold text-purple-900 mb-4">
              Contact informatie
            </h4>

            <div class="space-y-4">
              <div class="flex items-start gap-3 text-purple-700">
                <svg
                  class="w-5 h-5 mt-1 flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                  ></path>
                </svg>
                <div>
                  <span class="font-medium">hello@nutzy.nl</span>
                  <p class="text-sm text-gray-600">Voor algemene vragen</p>
                </div>
              </div>

              <div class="flex items-start gap-3 text-purple-700">
                <svg
                  class="w-5 h-5 mt-1 flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                  ></path>
                </svg>
                <div>
                  <span class="font-medium">+31 (0) 85 782 1400</span>
                  <p class="text-sm text-gray-600">Ma-Vr 9:00-17:00</p>
                </div>
              </div>

              <div class="flex items-start gap-3 text-purple-700">
                <svg
                  class="w-5 h-5 mt-1 flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                <div>
                  <span class="font-medium">Kantoor Bezoek</span>
                  <p class="text-sm text-gray-600">
                    Stationsplein 45<br />
                    3013 AK Rotterdam<br />
                    Nederland
                  </p>
                  <a
                    href="https://maps.app.goo.gl/z82LmnzEjv2fYayp8"
                    target="_blank"
                    class="text-sm text-purple-600 hover:text-purple-800 underline"
                  >
                    Bekijk route â†’
                  </a>
                </div>
              </div>

              <div class="flex items-start gap-3 text-purple-700">
                <svg
                  class="w-5 h-5 mt-1 flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <div>
                  <span class="font-medium">Openingstijden</span>
                  <div class="text-sm text-gray-600 mt-1">
                    <div class="flex justify-between">
                      <span>Maandag - Vrijdag:</span>
                      <span>9:00 - 17:00</span>
                    </div>
                    <div class="flex justify-between">
                      <span>Weekend:</span>
                      <span>Gesloten</span>
                    </div>
                  </div>
                </div>
              </div>

              <div class="flex items-start gap-3 text-purple-700">
                <svg
                  class="w-5 h-5 mt-1 flex-shrink-0"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"
                  ></path>
                </svg>
                <div>
                  <span class="font-medium">Volg ons</span>
                  <div class="flex gap-3 mt-2">
                    <a
                      href="https://www.tiktok.com/@gonutzy"
                      target="_blank"
                      class="text-purple-600 hover:text-purple-800 transition-colors duration-300"
                    >
                      <span class="sr-only">TikTok</span>
                      <svg
                        class="w-5 h-5"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M19.59 6.69a4.83 4.83 0 01-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 01-5.2 1.74 2.89 2.89 0 012.31-4.64 2.93 2.93 0 01.88.13V9.4a6.84 6.84 0 00-.88-.05A6.33 6.33 0 005 20.1a6.34 6.34 0 0010.86-4.43v-7a8.16 8.16 0 004.77 1.52v-3.4a4.85 4.85 0 01-1-.1z"
                        ></path>
                      </svg>
                    </a>
                    <a
                      href="https://www.linkedin.com/company/nutzy"
                      target="_blank"
                      class="text-purple-600 hover:text-purple-800 transition-colors duration-300"
                    >
                      <span class="sr-only">LinkedIn</span>
                      <svg
                        class="w-5 h-5"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
                        ></path>
                      </svg>
                    </a>
                    <a
                      href="https://www.instagram.com/gonutzy"
                      target="_blank"
                      class="text-purple-600 hover:text-purple-800 transition-colors duration-300"
                    >
                      <span class="sr-only">Instagram</span>
                      <svg
                        class="w-5 h-5"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987s11.987-5.367 11.987-11.987C24.014 5.367 18.647.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.323-1.297C4.198 14.895 3.708 13.744 3.708 12.447s.49-2.448 1.297-3.323C5.902 8.198 7.053 7.708 8.35 7.708s2.448.49 3.323 1.297c.876.876 1.366 2.027 1.366 3.324s-.49 2.448-1.366 3.323c-.875.876-2.026 1.366-3.323 1.366zm7.718 0c-1.297 0-2.448-.49-3.323-1.297-.876-.875-1.366-2.026-1.366-3.323s.49-2.448 1.366-3.323c.875-.876 2.026-1.366 3.323-1.366s2.448.49 3.323 1.366c.876.875 1.366 2.026 1.366 3.323s-.49 2.448-1.366 3.323c-.875.876-2.026 1.366-3.323 1.366z"
                        ></path>
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Contact Form -->
      <div class="contact-form" data-contact-form-fields>
        <form class="bg-white rounded-2xl p-8 shadow-lg space-y-6" data-form>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label
                for="firstName"
                class="block text-sm font-semibold text-gray-700 mb-2"
              >
                Voornaam *
              </label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white"
                placeholder="Jouw voornaam"
                aria-describedby="firstName-error"
              />
              <div
                id="firstName-error"
                class="error-message text-red-500 text-sm mt-1 hidden"
                role="alert"
              >
              </div>
            </div>

            <div class="form-group">
              <label
                for="lastName"
                class="block text-sm font-semibold text-gray-700 mb-2"
              >
                Achternaam *
              </label>
              <input
                type="text"
                id="lastName"
                name="lastName"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white"
                placeholder="Jouw achternaam"
                aria-describedby="lastName-error"
              />
              <div
                id="lastName-error"
                class="error-message text-red-500 text-sm mt-1 hidden"
                role="alert"
              >
              </div>
            </div>
          </div>

          <div class="form-group">
            <label
              for="email"
              class="block text-sm font-semibold text-gray-700 mb-2"
            >
              E-mailadres *
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white"
              placeholder="jouw@email.nl"
              aria-describedby="email-error"
            />
            <div
              id="email-error"
              class="error-message text-red-500 text-sm mt-1 hidden"
              role="alert"
            >
            </div>
          </div>

          <div class="form-group">
            <label
              for="company"
              class="block text-sm font-semibold text-gray-700 mb-2"
            >
              Bedrijf
            </label>
            <input
              type="text"
              id="company"
              name="company"
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white"
              placeholder="Jouw bedrijfsnaam"
            />
          </div>

          <div class="form-group">
            <label
              for="subject"
              class="block text-sm font-semibold text-gray-700 mb-2"
            >
              Onderwerp *
            </label>
            <select
              id="subject"
              name="subject"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white"
              aria-describedby="subject-error"
            >
              <option value="">Selecteer een onderwerp</option>
              <option value="demo">Demo aanvragen</option>
              <option value="partnership">Partnership mogelijkheden</option>
              <option value="pricing">Prijsinformatie</option>
              <option value="support">Support vraag</option>
              <option value="other">Anders</option>
            </select>
            <div
              id="subject-error"
              class="error-message text-red-500 text-sm mt-1 hidden"
              role="alert"
            >
            </div>
          </div>

          <div class="form-group">
            <label
              for="message"
              class="block text-sm font-semibold text-gray-700 mb-2"
            >
              Bericht *
            </label>
            <textarea
              id="message"
              name="message"
              required
              rows="5"
              class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 bg-gray-50 focus:bg-white resize-vertical"
              placeholder="Vertel ons over jouw recruitment uitdagingen..."
              aria-describedby="message-error"></textarea>
            <div
              id="message-error"
              class="error-message text-red-500 text-sm mt-1 hidden"
              role="alert"
            >
            </div>
          </div>

          <div class="form-group">
            <label class="flex items-start gap-3">
              <input
                type="checkbox"
                id="privacy"
                name="privacy"
                required
                class="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                aria-describedby="privacy-error"
              />
              <span class="text-sm text-gray-600">
                Ik ga akkoord met de <a
                  href="/privacy"
                  class="text-purple-600 hover:text-purple-800 underline"
                  >privacyverklaring</a
                > en geef toestemming voor het verwerken van mijn gegevens. *
              </span>
            </label>
            <div
              id="privacy-error"
              class="error-message text-red-500 text-sm mt-1 hidden"
              role="alert"
            >
            </div>
          </div>

          <button
            type="submit"
            class="group relative w-full overflow-hidden rounded-2xl bg-gradient-to-r from-purple-600 via-pink-600 to-purple-800 px-8 py-4 text-xl font-semibold text-white shadow-2xl transition-all duration-300 hover:scale-105 hover:shadow-purple-500/25 focus:outline-none focus:ring-4 focus:ring-purple-500/50 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed"
            data-submit-btn
          >
            <span class="relative z-10 flex items-center justify-center gap-3">
              <span data-btn-text>Verstuur bericht</span>
              <svg
                class="h-6 w-6 transition-transform duration-300 group-hover:translate-x-1"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                data-btn-icon
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
              </svg>
            </span>
            <div
              class="absolute inset-0 bg-gradient-to-r from-purple-700 via-pink-700 to-purple-900 opacity-0 transition-opacity duration-300 group-hover:opacity-100"
            >
            </div>
          </button>

          <div
            id="form-status"
            class="text-center hidden"
            role="status"
            aria-live="polite"
          >
            <div class="success-message text-green-600 font-medium hidden">
              âœ“ Bedankt! Je bericht is succesvol verzonden. We nemen binnen 24
              uur contact met je op.
            </div>
            <div class="error-message text-red-600 font-medium hidden">
              âœ— Er is iets misgegaan. Probeer het opnieuw of neem direct contact
              met ons op.
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { SplitText } from "gsap/SplitText";

  // Register GSAP plugins
  gsap.registerPlugin(SplitText, ScrollTrigger);

  // Check for reduced motion preference
  const prefersReducedMotion = window.matchMedia(
    "(prefers-reduced-motion: reduce)"
  ).matches;

  class ContactFormValidator {
    private form: HTMLFormElement;
    private errors: Map<string, string> = new Map();

    constructor(form: HTMLFormElement) {
      this.form = form;
      this.initializeValidation();
    }

    private initializeValidation(): void {
      // Add real-time validation
      const inputs = this.form.querySelectorAll("input, select, textarea");
      inputs.forEach((input) => {
        input.addEventListener("blur", () =>
          this.validateField(input as HTMLInputElement)
        );
        input.addEventListener("input", () =>
          this.clearFieldError(input as HTMLInputElement)
        );
      });
    }

    private validateField(field: HTMLInputElement): boolean {
      const value = field.value.trim();
      const fieldName = field.name;
      let isValid = true;
      let errorMessage = "";

      // Clear previous error
      this.clearFieldError(field);

      // Required field validation
      if (field.hasAttribute("required") && !value) {
        errorMessage = "Dit veld is verplicht";
        isValid = false;
      }
      // Email validation
      else if (field.type === "email" && value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(value)) {
          errorMessage = "Voer een geldig e-mailadres in";
          isValid = false;
        }
      }
      // Name validation (no numbers or special characters)
      else if (
        (fieldName === "firstName" || fieldName === "lastName") &&
        value
      ) {
        const nameRegex = /^[a-zA-ZÃ€-Ã¿\s'-]+$/;
        if (!nameRegex.test(value)) {
          errorMessage =
            "Alleen letters, spaties en koppeltekens zijn toegestaan";
          isValid = false;
        }
      }
      // Message length validation
      else if (fieldName === "message" && value && value.length < 10) {
        errorMessage = "Bericht moet minimaal 10 karakters bevatten";
        isValid = false;
      }

      if (!isValid) {
        this.showFieldError(field, errorMessage);
        this.errors.set(fieldName, errorMessage);
      } else {
        this.errors.delete(fieldName);
      }

      return isValid;
    }

    private showFieldError(field: HTMLInputElement, message: string): void {
      const errorElement = document.getElementById(`${field.id}-error`);
      if (errorElement) {
        errorElement.textContent = message;
        errorElement.classList.remove("hidden");
      }
      field.classList.add("border-red-500", "focus:ring-red-500");
      field.classList.remove("border-gray-300", "focus:ring-purple-500");
    }

    private clearFieldError(field: HTMLInputElement): void {
      const errorElement = document.getElementById(`${field.id}-error`);
      if (errorElement) {
        errorElement.classList.add("hidden");
      }
      field.classList.remove("border-red-500", "focus:ring-red-500");
      field.classList.add("border-gray-300", "focus:ring-purple-500");
    }

    public validateForm(): boolean {
      const inputs = this.form.querySelectorAll(
        "input[required], select[required], textarea[required]"
      );
      let isFormValid = true;

      inputs.forEach((input) => {
        const fieldValid = this.validateField(input as HTMLInputElement);
        if (!fieldValid) {
          isFormValid = false;
        }
      });

      return isFormValid;
    }

    public getErrors(): Map<string, string> {
      return this.errors;
    }
  }

  function initContactForm(): void {
    const contactForm = document.querySelector(
      "[data-contact-form]"
    ) as HTMLElement;
    if (!contactForm) return;

    const form = contactForm.querySelector("[data-form]") as HTMLFormElement;
    const submitBtn = contactForm.querySelector(
      "[data-submit-btn]"
    ) as HTMLButtonElement;
    const formStatus = document.getElementById("form-status") as HTMLElement;

    if (!form || !submitBtn || !formStatus) return;

    // Initialize form validator
    const validator = new ContactFormValidator(form);

    // Initialize animations
    if (!prefersReducedMotion) {
      initContactAnimations(contactForm);
    }

    // Form submission handler
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      if (!validator.validateForm()) {
        // Focus on first error field
        const firstError = form.querySelector(
          ".border-red-500"
        ) as HTMLInputElement;
        if (firstError) {
          firstError.focus();
        }
        return;
      }

      await handleFormSubmission(form, submitBtn, formStatus);
    });
  }

  async function handleFormSubmission(
    form: HTMLFormElement,
    submitBtn: HTMLButtonElement,
    formStatus: HTMLElement
  ): Promise<void> {
    const btnText = submitBtn.querySelector("[data-btn-text]") as HTMLElement;
    const btnIcon = submitBtn.querySelector("[data-btn-icon]") as HTMLElement;
    const successMessage = formStatus.querySelector(
      ".success-message"
    ) as HTMLElement;
    const errorMessage = formStatus.querySelector(
      ".error-message"
    ) as HTMLElement;

    // Update button state
    submitBtn.disabled = true;
    btnText.textContent = "Versturen...";
    btnIcon.innerHTML = `
      <svg class="animate-spin h-6 w-6" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    `;

    try {
      // Simulate form submission (replace with actual endpoint)
      await new Promise((resolve) => setTimeout(resolve, 2000));

      // Show success message
      formStatus.classList.remove("hidden");
      successMessage.classList.remove("hidden");
      errorMessage.classList.add("hidden");

      // Reset form
      form.reset();

      // Animate success
      if (!prefersReducedMotion) {
        gsap.fromTo(
          successMessage,
          { opacity: 0, y: 20 },
          { opacity: 1, y: 0, duration: 0.5, ease: "power2.out" }
        );
      }
    } catch (error) {
      // Show error message
      formStatus.classList.remove("hidden");
      errorMessage.classList.remove("hidden");
      successMessage.classList.add("hidden");

      if (!prefersReducedMotion) {
        gsap.fromTo(
          errorMessage,
          { opacity: 0, y: 20 },
          { opacity: 1, y: 0, duration: 0.5, ease: "power2.out" }
        );
      }
    } finally {
      // Reset button state
      submitBtn.disabled = false;
      btnText.textContent = "Verstuur bericht";
      btnIcon.innerHTML = `
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
      `;
    }
  }

  function initContactAnimations(contactForm: HTMLElement): void {
    // Animate title
    const titleElement = contactForm.querySelector(".split-contact");
    if (titleElement) {
      const split = SplitText.create(titleElement, { type: "words, chars" });
      gsap.fromTo(
        split.chars,
        { opacity: 0, y: 100 },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          stagger: 0.05,
          scrollTrigger: {
            trigger: titleElement,
            start: "top 80%",
            end: "bottom 20%",
            toggleActions: "play none none reverse",
          },
        }
      );
    }

    // Animate contact info
    const contactInfo = contactForm.querySelector("[data-contact-info]");
    if (contactInfo) {
      gsap.fromTo(
        contactInfo,
        { opacity: 0, x: -50 },
        {
          opacity: 1,
          x: 0,
          duration: 0.8,
          ease: "power2.out",
          scrollTrigger: {
            trigger: contactInfo,
            start: "top 80%",
            end: "bottom 20%",
            toggleActions: "play none none reverse",
          },
        }
      );
    }

    // Animate form fields
    const formFields = contactForm.querySelector("[data-contact-form-fields]");
    if (formFields) {
      gsap.fromTo(
        formFields,
        { opacity: 0, x: 50 },
        {
          opacity: 1,
          x: 0,
          duration: 0.8,
          ease: "power2.out",
          delay: 0.2,
          scrollTrigger: {
            trigger: formFields,
            start: "top 80%",
            end: "bottom 20%",
            toggleActions: "play none none reverse",
          },
        }
      );
    }

    // Animate form groups individually
    const formGroups = contactForm.querySelectorAll(".form-group");
    formGroups.forEach((group, index) => {
      gsap.fromTo(
        group,
        { opacity: 0, y: 30 },
        {
          opacity: 1,
          y: 0,
          duration: 0.6,
          ease: "power2.out",
          delay: 0.4 + index * 0.1,
          scrollTrigger: {
            trigger: group,
            start: "top 90%",
            end: "bottom 10%",
            toggleActions: "play none none reverse",
          },
        }
      );
    });
  }

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", initContactForm);
</script>
