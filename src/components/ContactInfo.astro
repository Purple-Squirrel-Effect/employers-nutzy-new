---
// Contact information data structure
interface ContactMethod {
  id: string;
  type: 'email' | 'phone' | 'address' | 'social';
  label: string;
  value: string;
  href?: string;
  icon: string;
  description?: string;
}

interface OfficeHours {
  day: string;
  hours: string;
}

// Contact methods data
const contactMethods: ContactMethod[] = [
  {
    id: "email",
    type: "email",
    label: "E-mail",
    value: "hello@nutzy.nl",
    href: "mailto:hello@nutzy.nl",
    icon: "email",
    description: "Voor algemene vragen en ondersteuning"
  },
  {
    id: "phone",
    type: "phone", 
    label: "Telefoon",
    value: "+31 (0)20 123 4567",
    href: "tel:+31201234567",
    icon: "phone",
    description: "Bereikbaar op werkdagen van 9:00 - 17:00"
  },
  {
    id: "address",
    type: "address",
    label: "Adres",
    value: "Amsterdam, Nederland",
    href: "https://maps.google.com/?q=Amsterdam,Nederland",
    icon: "location",
    description: "Bezoek op afspraak"
  }
];

// Office hours data
const officeHours: OfficeHours[] = [
  { day: "Maandag - Vrijdag", hours: "9:00 - 17:00" },
  { day: "Weekend", hours: "Gesloten" }
];

// Quick contact options
const quickActions = [
  {
    id: "demo",
    title: "Plan een Demo",
    description: "Bekijk ons platform in actie",
    icon: "play",
    href: "#contact-form",
    color: "bg-secondary-900 hover:bg-secondary-900"
  },
  {
    id: "partnership",
    title: "Partnership",
    description: "Verken samenwerkingsmogelijkheden",
    icon: "handshake",
    href: "#contact-form",
    color: "bg-primary-900 hover:bg-primary-900"
  }
];
---

<div class="space-y-8">
  <!-- Contact Info Header -->
  <!-- <div class="text-center lg:text-left" data-contact-header>
    <h2 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
      Neem <span class="text-secondary-900">contact</span> op
    </h2>
    <p class="text-lg text-gray-700 leading-relaxed">
      We staan klaar om je te helpen met al je vragen over ons Gen-Z recruitment platform.
    </p>
  </div> -->

  <!-- Contact Methods -->
  <div class="space-y-6" data-contact-methods>
    {contactMethods.map((method, index) => (
      <div 
        class="contact-method-card bg-white rounded-2xl p-6 hover:bg-gray-50 transition-all duration-300 hover:scale-105 group border border-gray-200 shadow-lg"
        data-contact-method
        data-index={index}
      >
        <div class="flex items-start space-x-4">
          <!-- Icon -->
          <div class="flex-shrink-0">
            <div class="w-12 h-12 bg-primary-200 rounded-xl flex items-center justify-center group-hover:bg-primary-500 transition-colors duration-300">
              {method.icon === 'email' && (
                <svg class="w-6 h-6 text-primary-900 group-hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              )}
              {method.icon === 'phone' && (
                <svg class="w-6 h-6 text-primary-900 group-hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              )}
              {method.icon === 'location' && (
                <svg class="w-6 h-6 text-primary-900 group-hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              )}
            </div>
          </div>
          
          <!-- Content -->
          <div class="flex-1 min-w-0">
            <h3 class="text-lg font-semibold text-gray-900 mb-1">
              {method.label}
            </h3>
            {method.href ? (
              <a
                href={method.href}
                class="text-secondary-900 hover:brightness-105 transition-colors duration-200 font-medium text-lg block mb-2"
                target={method.type === 'address' ? '_blank' : undefined}
                rel={method.type === 'address' ? 'noopener noreferrer' : undefined}
              >
                {method.value}
              </a>
            ) : (
              <p class="text-gray-900 text-lg mb-2">{method.value}</p>
            )}
            {method.description && (
              <p class="text-gray-600 text-sm">{method.description}</p>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Office Hours -->
  <div class="bg-white rounded-2xl p-6 border border-gray-200 shadow-lg" data-office-hours>
    <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-secondary-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      Openingstijden
    </h3>
    <div class="space-y-2">
      {officeHours.map((schedule) => (
        <div class="flex justify-between items-center text-gray-900">
          <span class="font-medium">{schedule.day}</span>
          <span>{schedule.hours}</span>
        </div>
      ))}
    </div>
  </div>

  <!-- Quick Actions -->
  <!-- <div class="space-y-4" data-quick-actions>
    <h3 class="text-xl font-bold text-gray-900">Snelle acties</h3>
    <div class="grid grid-cols-1 gap-4">
      {quickActions.map((action, index) => (
        <a
          href={action.href}
          class={`quick-action-card ${action.color} rounded-xl p-4 text-white hover:scale-105 transition-all duration-300 group block`}
          data-quick-action
          data-index={index}
        >
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center group-hover:bg-white/30 transition-colors duration-300 flex-shrink-0">
              {action.icon === 'play' && (
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m-6-8h1m4 0h1M9 6h1m4 0h1M9 2h1m4 0h1"></path>
                </svg>
              )}
              {action.icon === 'handshake' && (
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
                </svg>
              )}
            </div>
            <div class="min-w-0 flex-1">
              <h4 class="font-semibold text-sm">{action.title}</h4>
              <p class="text-xs text-white/80">{action.description}</p>
            </div>
          </div>
        </a>
      ))}
    </div>
  </div> -->
</div>

<style>
  /* Contact method cards animation */
  .contact-method-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .contact-method-card:nth-child(1) { animation-delay: 0.1s; }
  .contact-method-card:nth-child(2) { animation-delay: 0.2s; }
  .contact-method-card:nth-child(3) { animation-delay: 0.3s; }

  /* Quick action cards animation */
  .quick-action-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .quick-action-card:nth-child(1) { animation-delay: 0.4s; }
  .quick-action-card:nth-child(2) { animation-delay: 0.5s; }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Enhanced focus states for accessibility */
  .contact-method-card a:focus,
  .quick-action-card:focus {
    outline: 2px solid #412683;
    outline-offset: 2px;
  }

  /* Reduced motion fallback */
  @media (prefers-reduced-motion: reduce) {
    .contact-method-card,
    .quick-action-card {
      animation: none;
      opacity: 1;
      transform: none;
    }
    
    .contact-method-card:hover,
    .quick-action-card:hover {
      transform: none;
    }
  }
</style>
